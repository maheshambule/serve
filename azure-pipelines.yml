# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name : 'serve'


steps:

- powershell: python --version
# - script:  python ts_scripts/install_dependencies.py --cuda=cu101 --environment=dev
#   displayName: 'run install_dependencies'

# - script:  python ts_scripts/install_from_src.py 
#   displayName: 'run install from source'
 
# - script:  python torchserve_sanity.py
#   displayName: 'run sanity suite'

- task: CopyFiles@2
  inputs:
    contents: 'frontend/server/build/reports/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
  condition: succeededOrFailed()


- script:  python test/regression_tests.py
  displayName: 'run regression suite'

- task: CopyFiles@2
  inputs:
    contents: 'test/pytest/logs/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
  condition: succeededOrFailed()

- task: CopyFiles@2
  inputs:
    contents: 'test/artifacts/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: frontend_build_reports
  condition: succeededOrFailed()

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'specific'
    downloadPath: '$(System.ArtifactsDirectory)'
  condition: succeededOrFailed()
    